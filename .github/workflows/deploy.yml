name: 'Continous Integration'

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./devops/infrastructure
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check

      - name: Substitude backend vars with secrets
        uses: cschleiden/replace-tokens@v1
        with:
          files: './devops/infrastructure/backend.tfvars'
        env: 
          tf_state_storage_account_name: ${{ secrets.TERRAFORM_STATE_STORAGE_ACCOUNT_NAME }}
          tf_state_storage_account_access_key: ${{ secrets.TERRAFORM_STATE_ACCESS_KEY }}

      - name: Terraform init
        id: init
        run: terraform init --backend-config=backend.tfvars

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Substitude variables file with secrets
        uses: cschleiden/replace-tokens@v1
        with:
          files: './devops/infrastructure/variables.tfvars'
        env: 
          azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          cloudflare_zone_id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -var-file="variables.tfvars"

      - name: Terraform apply
        id: apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -var-file="variables.tfvars"

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            }) 
  # This workflow contains a single job called "build"
  deploy:
    needs: terraform
    if: github.ref == 'refs/heads/main'
    name: 'Deploy to www.madsn.dk'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Azure Static Web Apps Deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          # Action to perform
          action: 'upload'
          # Directory location of the application source code
          app_location: 'src/mikkelhm-food'
          # Required token
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          # Skips the build step for the application source code if set to true.
          skip_app_build: true
